<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.demo.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.shop.demo.pojo.Product" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="publishtime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="recommend" property="recommend" jdbcType="INTEGER" />
    <result column="oldest" property="oldest" jdbcType="INTEGER" />
    <result column="hot" property="hot" jdbcType="INTEGER" />
      <result column="fields" property="fields1" jdbcType="VARCHAR" />
      <result column="typeid" property="typeid" jdbcType="VARCHAR" />
    <result column="typename" property="typename" jdbcType="VARCHAR" />
      <result column="pthoto" jdbcType="VARCHAR" property="pthoto" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, price, title, stock, number, description, publishtime, recommend, oldest,
    hot,fields typeid, typename,pthoto
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectrecommendList" resultMap="BaseResultMap" parameterType="com.shop.demo.pojo.Product" >
    select
    id, name, price, title, stock, number, description, publishtime, recommend, oldest,
    hot,fields, typeid, typename
    from product where recommend=1;
  </select>
    <select id="selectoldestList" resultMap="BaseResultMap" parameterType="com.shop.demo.pojo.Product" >
     select
     id, name, price, title, stock, number, description, publishtime, recommend, oldest,
     hot,fields, typeid, typename
     from product where oldest=1;
  </select>

    <select id="selecthotList" resultMap="BaseResultMap" parameterType="com.shop.demo.pojo.Product" >
     select
     id, name, price, title, stock, number, description, publishtime, recommend, oldest,
     hot,fields, typeid, typename
     from product where hot=1;
    </select>


    <select id="selectOneList" resultMap="BaseResultMap" parameterType="com.shop.demo.pojo.Product" >
     select
     id, name, price, title, stock, number, description, publishtime, recommend, oldest,
     hot,fields, typeid, typename
     from product where typeid=#{typeid};
    </select>





  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.shop.demo.pojo.Product" >
    insert into product (id, name, price,
      title, stock, number,
      description, publishtime, recommend,
      oldest, hot,fields, typeid,
      typename)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE},
      #{title,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, #{number,jdbcType=INTEGER},
      #{description,jdbcType=VARCHAR}, #{publishtime,jdbcType=TIMESTAMP}, #{recommend,jdbcType=INTEGER},
      #{oldest,jdbcType=INTEGER}, #{hot,jdbcType=INTEGER},#{fields,jdbcType=VARCHAR}, #{typeid,jdbcType=VARCHAR},
      #{typename,jdbcType=VARCHAR}),#{pthoto,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.demo.pojo.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="publishtime != null" >
        publishtime,
      </if>
      <if test="recommend != null" >
        recommend,
      </if>
      <if test="oldest != null" >
        oldest,
      </if>
      <if test="hot != null" >
        hot,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
        <if test="fields != null" >
            fields,
        </if>
      <if test="typename != null" >
        typename,
      </if>
        <if test="pthoto!= null">
            pthoto,
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.demo.pojo.Product" >
    update product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null" >
        publishtime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="recommend != null" >
        recommend = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="oldest != null" >
        oldest = #{oldest,jdbcType=INTEGER},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=VARCHAR},
      </if>
        <if test="fields != null" >
            #{fields,jdbcType=VARCHAR},
        </if>
      <if test="typename != null" >
        typename = #{typename,jdbcType=VARCHAR},
      </if>
        <if test="pthoto != null">
            pthoto = #{pthoto,jdbcType=VARCHAR},
        </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.demo.pojo.Product" >
    update product
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      title = #{title,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      publishtime = #{publishtime,jdbcType=TIMESTAMP},
      recommend = #{recommend,jdbcType=INTEGER},
      oldest = #{oldest,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      fields = #{fields,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=VARCHAR},
      typename = #{typename,jdbcType=VARCHAR}
      pthoto = #{pthoto,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="selectBySelective" parameterType="com.shop.demo.pojo.Product" resultType="com.shop.demo.pojo.Product">
        select * from product
        <where>
            <if test="id != null">
                and id like CONCAT(CONCAT('%', #{id}), '%')
            </if>
            <if test="name != null">
                and name like CONCAT(CONCAT('%', #{name}), '%')
            </if>
            <if test="price != null">
                and price like CONCAT(CONCAT('%', #{name}), '%')
            </if>
            <if test="title != null">
                and title like CONCAT(CONCAT('%', #{title}), '%')
            </if>
            <if test="stock != null">
                and stock like CONCAT(CONCAT('%', #{stock}), '%')
            </if>
            <if test="number != null">
                and number like CONCAT(CONCAT('%', #{number}), '%')
            </if>
            <if test="description != null">
                and description like CONCAT(CONCAT('%', #{description}), '%')
            </if>
            <if test="publishtime != null">
                and publishtime like CONCAT(CONCAT('%', #{publishtime}), '%')
            </if>
            <if test="recommend != null">
                and recommend like CONCAT(CONCAT('%', #{recommend}), '%')
            </if>
            <if test="oldest != null">
                and oldest like CONCAT(CONCAT('%', #{oldest}), '%')
            </if>
            <if test="hot != null">
                and hot like CONCAT(CONCAT('%', #{hot}), '%')
            </if>
            <if test="typeid != null">
                and typeid like CONCAT(CONCAT('%', #{typeid}), '%')
            </if>
            <if test="typename != null">
                and typename like CONCAT(CONCAT('%', #{typename}), '%')
            </if>
            <if test="pthoto != null">
                and pthoto like CONCAT(CONCAT('%', #{pthoto}), '%')
            </if>
        </where>
    </select>
</mapper>