<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.demo.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.shop.demo.pojo.Orders">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="productid" jdbcType="VARCHAR" property="productid" />
    <result column="productname" jdbcType="VARCHAR" property="productname" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="totle" jdbcType="DOUBLE" property="totle" />
    <result column="ispay" jdbcType="INTEGER" property="ispay" />
    <result column="invoice" jdbcType="VARCHAR" property="invoice" />
    <result column="receive" jdbcType="INTEGER" property="receive" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="addrid" jdbcType="VARCHAR" property="addrid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, productid, productname, title, price, number, totle, ispay, invoice, 
    receive, state, address, addrid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectAllOrder" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orders
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.shop.demo.pojo.Orders">
    insert into orders (id, openid, productid, 
      productname, title, price, 
      number, totle, ispay, 
      invoice, receive, state, 
      address, addrid)
    values (#{id,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{productid,jdbcType=VARCHAR}, 
      #{productname,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{number,jdbcType=INTEGER}, #{totle,jdbcType=DOUBLE}, #{ispay,jdbcType=INTEGER}, 
      #{invoice,jdbcType=VARCHAR}, #{receive,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{addrid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.demo.pojo.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="productid != null">
        productid,
      </if>
      <if test="productname != null">
        productname,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="totle != null">
        totle,
      </if>
      <if test="ispay != null">
        ispay,
      </if>
      <if test="invoice != null">
        invoice,
      </if>
      <if test="receive != null">
        receive,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="addrid != null">
        addrid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=VARCHAR},
      </if>
      <if test="productname != null">
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="totle != null">
        #{totle,jdbcType=DOUBLE},
      </if>
      <if test="ispay != null">
        #{ispay,jdbcType=INTEGER},
      </if>
      <if test="invoice != null">
        #{invoice,jdbcType=VARCHAR},
      </if>
      <if test="receive != null">
        #{receive,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="addrid != null">
        #{addrid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.demo.pojo.Orders">
    update orders
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="productid != null">
        productid = #{productid,jdbcType=VARCHAR},
      </if>
      <if test="productname != null">
        productname = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="totle != null">
        totle = #{totle,jdbcType=DOUBLE},
      </if>
      <if test="ispay != null">
        ispay = #{ispay,jdbcType=INTEGER},
      </if>
      <if test="invoice != null">
        invoice = #{invoice,jdbcType=VARCHAR},
      </if>
      <if test="receive != null">
        receive = #{receive,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="addrid != null">
        addrid = #{addrid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.demo.pojo.Orders">
    update orders
    set openid = #{openid,jdbcType=VARCHAR},
      productid = #{productid,jdbcType=VARCHAR},
      productname = #{productname,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      number = #{number,jdbcType=INTEGER},
      totle = #{totle,jdbcType=DOUBLE},
      ispay = #{ispay,jdbcType=INTEGER},
      invoice = #{invoice,jdbcType=VARCHAR},
      receive = #{receive,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      addrid = #{addrid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="select" resultType="com.shop.demo.dto.OrdersDetail">
    select productid,productname,orders.title,orders.price,totle,ispay,invoice,orders.number,receive,stock,pthoto,address from orders,product
      <trim prefix="WHERE" prefixOverrides="AND|OR">
        and orders.productid = product.id
        <if test = "openid!=null">
          and openid = #{openid}
        </if>
        <if test="ispay!=-1">
          and ispay = #{ispay}
        </if>
        <if test="receive!=-1">
          and receive = #{receive}
        </if>
        <if test="productid!=null">
          and productid = #{productid}
        </if>
        and state = 1
      </trim>
  </select>
  <select id="selectBySelective" parameterType="com.shop.demo.pojo.Orders" resultType="com.shop.demo.dto.OdersDto">
    select o.id, o.openid, o.productid,
    o.productname, o.title, o.price,
    o.number, o.totle, o.ispay,
    o.invoice, o.receive, o.state,
    o.address, o.addrid,p.stock,p.pthoto from product p,orders o
    <where>
      p.id=o.productid
      <if test="id != null">
        and id =#{id}
      </if>
      <if test="openid != null">
        and  openid like CONCAT(CONCAT('%', #{openid}), '%')
      </if>
      <if test="productid!= null">
        and productid like CONCAT(CONCAT('%', #{productid}), '%')
      </if>
      <if test="productname!= null">
        and productname like CONCAT(CONCAT('%', #{productname}), '%')
      </if>
      <if test="title!= null">
        and title like CONCAT(CONCAT('%', #{title}), '%')
      </if>
      <if test="price!= null">
        and price like CONCAT(CONCAT('%', #{price}), '%')
      </if>
      <if test="number!= null">
        and number like CONCAT(CONCAT('%', #{number}), '%')
      </if>
      <if test="totle!= null">
        and totle like CONCAT(CONCAT('%', #{totle}), '%')
      </if>
      <if test="ispay!= null">
        and ispay like CONCAT(CONCAT('%', #{ispay}), '%')
      </if>
      <if test="invoice!= null">
        and invoice like CONCAT(CONCAT('%', #{invoice}), '%')
      </if>
      <if test="receive!= null">
        and receive like CONCAT(CONCAT('%', #{receive}), '%')
      </if>
      <if test="state!= null">
        and state like CONCAT(CONCAT('%', #{state}), '%')
      </if>
      <if test="address!= null">
        and address like CONCAT(CONCAT('%', #{address}), '%')
      </if>
      <if test="addrid!= null">
        and addrid like CONCAT(CONCAT('%', #{addrid}), '%')
      </if>
    </where>
  </select>
</mapper>